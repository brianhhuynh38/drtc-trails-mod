uses paul/region-layout.df

"../deathforth/rooms/duodenum.txt" $load-rooms

locdef{

: swolegym-lights
	20000 70 50 ticklight
	20000 130 60 ticklight
	20000 200 50 ticklight
;

location: tradergym
		max-rooms: 1
		entry-tags: traderswole-entry
		pre-script: yall-theme
		script: yall-theme
		post-script: 
		
		room-choice: traderswole-entry
			room-weight: 10
			room-count: 1
			room-script: ndx 
			room-post-script: swolegym-lights
			filter-only

}

cyoa{

// Stat Trainers

0 value tradergym-strength+

: swolegym-train-amt numhums 2 * tradergym-strength+ 1 + * 1 + ; 
: swolegym-train-pay? trunk-food swolegym-train-amt 1 - > notsolo notsolohuman and and ;
: swolegym-train-pay swolegym-train-amt -1 * trunk-food+ ;

: swolegym-solo-amt tradergym-strength+ 2 * 3 + ;
: swolegym-solo-pay? trunk-food swolegym-solo-amt 1 - > ;
: swolegym-solo-pay swolegym-solo-amt -1 * trunk-food+ ;

cyoa-choice: tradergym-strength-train
	cchar .strength@ 6 < if
		($ cname .. " gets all pumped up from the strength training regiment!" $) goodfx
	else
		($ cname .. " has reached the limits of what training can do for " .. chim .. "!" $) badfx
	then cyoa-text! 
	swolegym-solo-pay strengthREV strength++ ' tradergym-strength+ ++
;

cyoa-choice: tradergym-strength-group
	($ "The entire group gets strength training!" $) cyoa-text! goodfx
	swolegym-train-pay someicon
	regiondef{ ' trade-strength-group! foreach-human-char } numhums ' tradergym-strength+ +!
;

cyoa: tradergym-strength-give
	solohuman if
		choosehuman tradergym-strength-train
	then;
	"Who should get this INTENSE strength workout?" cyoa-text!
	' tradergym-strength-train cyoa-human-choice
;

cyoa: tradergym-strength
	($ "THE GYM " rbold .. "U GET" rainbold .. " SWOLE" fbold $) cyoa-title!
	"Welcome to SWOLE MOUNTAIN!
	With SWOLE MOUNTAIN'S patented methods, I can train you to whatever level of strength you want, FAST!
	As long as you have the food, we can keep training!" rbold text! +cr foodamt
		swolegym-solo-pay? not if
			"You can't afford any more training." +crtext 
		then;
		choice( "Leave for now" )choice
		swolegym-solo-pay? if
			choice( "Give " .. swolegym-solo-amt .. " food for single training" )choice: tradergym-strength-give
		then
		swolegym-train-pay? if
			choice( "Give " .. swolegym-train-amt .. " food for group training" )choice: tradergym-strength-group
		then
		
;

0 value tradergym-fitness+

: swolefit-train-amt numhums 2 * tradergym-fitness+ 1 + * 1 + ; 
: swolefit-train-pay? trunk-food swolefit-train-amt 1 - > notsolo notsolohuman and and ;
: swolefit-train-pay swolefit-train-amt -1 * trunk-food+ ;

: swolefit-solo-amt tradergym-fitness+ 2 * 3 + ;
: swolefit-solo-pay? trunk-food swolefit-solo-amt 1 - > ;
: swolefit-solo-pay swolefit-solo-amt -1 * trunk-food+ ;

cyoa-choice: tradergym-fitness-train
	cchar .fitness@ 6 < if
		($ cname .. " gets all jazzed up from the fitness training regiment!" $) goodfx
	else
		($ cname .. " has reached the limits of what training can do for " .. chim .. "!" $) badfx
	then cyoa-text! 
	swolefit-solo-pay fitnessREV fitness++ ' tradergym-fitness+ ++
;

cyoa-choice: tradergym-fitness-group
	($ "The entire group gets fitness training!" $) cyoa-text! goodfx
	swolefit-train-pay someicon
	regiondef{ ' trade-fitness-group! foreach-human-char } numhums ' tradergym-fitness+ +!
;

cyoa: tradergym-fitness-give
	solohuman if
		choosehuman tradergym-fitness-train
	then;
	"Who should get this INTENSE fitness workout?" cyoa-text!
	' tradergym-fitness-train cyoa-human-choice
;

cyoa: tradergym-fitness
	($ "THE GYM " rbold .. "U ALSO GET" rainbold .. " FIT" fbold $) cyoa-title!
	"Welcome to SWOLE MOUNTAIN!
	Here at SWOLE MOUNTAIN, we believe cardio training is very important!
	As long as you have the food, we can keep training!" rbold text! +cr foodamt
		swolefit-solo-pay? not if
			"You can't afford any more training." +crtext 
		then;
		choice( "Leave for now" )choice
		swolefit-solo-pay? if
			choice( "Give " .. swolefit-solo-amt .. " food for single training" )choice: tradergym-fitness-give
		then
		swolefit-train-pay? if
			choice( "Give " .. swolefit-train-amt .. " food for group training" )choice: tradergym-fitness-group
		then
		
;

// Boxing Training

cyoa-choice: tradergym-boxing-train
	cchar .weapon_default@ WEAPON_BOXING = if
		($ cname .. " already knew how to throw a punch!
		" .. "Let's practice our footwork, then!" bbold $) text!
		dexterity++
	else
		($ cname .. " gets boxing training from an expert!
		" .. cname .. ": Boxing Punch learned!" rbold $) text!
		WEAPON_BOXING cchar .weapon_default!
	then goodfx clear-cyoa
	-20 trunk-food+ vitality++ strength++ strengthREV fitness++ fitnessREV
;

cyoa: tradergym-boxing-give
	solohuman if
		choosehuman tradergym-boxing-train
	then;
	"Who should get the ULTIMATE BOXING TRAINING?" cyoa-text!
	' tradergym-boxing-train cyoa-human-choice
;

cyoa: tradergym-boxing
	($ "SPECIAL BOXING TRAINING" fbold $) cyoa-title!
	"Special offer today, good for one person!
	I can give you a crash course in boxing! You'll learn how to punch, and I'll throw in some intense exercise to strengthen you, increase energy, and toughen you up!
	All for 20 food!" bbold text! +cr foodamt
		choice( "Leave for now" )choice
		trunk-food 19 > if
			choice( "Give 20 food for boxing training!" )choice: tradergym-boxing-give
		then
;


0 value tradergym-shady-1-buy
0 value tradergym-shady-2-buy
0 value tradergym-shady-3-buy

cyoa-choice: tradergym-shady-1
	iicon ($ pname .. " buys some " .. "KNUCKS" bbold .. "!
	" .. "Nothin beats a good pair of knucks." pbold $) text!
	goodfx 1 WEAPON_KNUCKS trunk.weapon+ -3 trunk-food+ ' tradergym-shady-1-buy ++
;

: .shadypump args( chara )
	<- chara .specialtype@ 0 > if
		<- chara .specialtype@ 25 = if
			<- chara .zombiewrestler
			1.3 <- chara .scale.body.x!
		else
			<- chara .specialtype@ <- chara .specialhead!
			0 <- chara .specialtype!
			1 <- chara .headoff.y!
		then
	else
		4 <- chara .headoff.y!
	then
	25 <- chara .specialbody!
	100 STAT_STRENGTH <- chara .bonus! 6 <- chara .strength!
	"is now truly pumped." <- chara .job!
	<- chara .zombielifter
	<- chara .specialhead@ 34 <> if <- chara .nocanshoot else "Swole Stallion" <- chara .name! then
	statmod{ MOD_TLBB <- chara .setmod } <- chara .swapspecial <- chara .atkspecial
;

cyoa-choice: tradergym-shady-2-go
	iicon ($ cname .. " learns the " .. "FORBIDDEN PUMP" bbold .. "!" $) text!
	cchar .specialtype@ 25 = if	
		($ "WHAT HAVE YOU DONE?
		WHAT HAVE YOU DOOOOOOOONE????
		" fbold .. cname .. " gains SLIGHTLY MORE MUSCLE MASS!
		" rbold .. cname .. " can now pick up zombies even before they fall down!" rbold $) +crtext
	else
		($ cHis .. " strength is " .. "RAISED TO IMPOSSIBLE LEVELS!!!" fbold $) +crtext
		"Lookin good!" pbold +crtext 
	then goodfx
	-20 trunk-food+ ' tradergym-shady-2-buy ++
		cchar .shadypump
;

cyoa: tradergym-shady-2
	solohuman if
		choosehuman tradergym-shady-2-go
	then;
	"Who should learn the FORBIDDEN PUMP?" cyoa-text!
	' tradergym-shady-2-go cyoa-human-choice
;

cyoa-choice: tradergym-shady-3-go
	iicon ($ cname .. " learns the " .. "PERFECT DIET" bbold .. "!
	" .. "The mere knowledge of it triggers a metamorphosis in " .. cname .. "'s body..." $) text!
	"Uh, no refunds." pbold +crtext goodfx
	-20 trunk-food+ ' tradergym-shady-3-buy ++
		cchar .specialbody@ 25 = cchar .specialtype@ 25 = or if -6 cchar .headoff.y! then
		1.6 cchar .scale.body.y!
		0.6 cchar .scale.body.x!
		dexterity++
;

cyoa: tradergym-shady-3
	solohuman if
		choosehuman tradergym-shady-3-go
	then;
	"Who should learn the PERFECT DIET?" cyoa-text!
	' tradergym-shady-3-go cyoa-human-choice
;

cyoa: tradergym-shady
	"Shady Trainer" cyoa-title!
	"Those other guys are a bunch of neeeerds.
	I got the real training!" pbold text!
	+cr foodamt
		trunk-food 3 < if
			"The shady trainer sneers at you." +crtext 
		then;
		choice( "Leave for now" )choice
		trunk-food 2 > tradergym-shady-1-buy 3 < and if
			choice( "Buy Brass Knucks - 3 food" )choice: tradergym-shady-1
		then
		trunk-food 19 > tradergym-shady-2-buy 1 < and if
			choice( "Learn FORBIDDEN PUMP - 20 food" )choice: tradergym-shady-2
		then
		trunk-food 19 > tradergym-shady-3-buy 1 < and if
			choice( "Learn PERFECT DIET - 20 food" )choice: tradergym-shady-3
		then
;

}

roomgen{

: tradergym-npc still-npc regiondef{ ' trader-event lt .events! 1 lt .timer! } ;

: .tradergym-fitness args( chara ) 
	3 <- chara .bodytype!
	19 <- chara .hairtype!
	0 <- chara .hattype!
	13 <- chara .legstype!
	1 <- chara .torsotype! ;
: tradergym-fitness
	tradergym-npc .tradergym-fitness cyoa{ ' tradergym-fitness cyoa! } ;
: .tradergym-strength args( chara ) 
	12 <- chara .haircolour!
	9 <- chara .torsotype!
	0 <- chara .hattype!
	10 <- chara .legstype! 
	2 <- chara .bodytype! ;
: tradergym-strength
	tradergym-npc .tradergym-strength cyoa{ ' tradergym-strength cyoa! } ;
: tradergym-boxing
	tradergym-npc .tradergym-strength cyoa{ ' tradergym-boxing cyoa! } 
	WEAPON_GLOVE lt .character@ .weapona! 
	1 lt .character@ .weapon_nodropa! ;
: tradergym-shady
	still-npc .tradergym-fitness cyoa{ ' tradergym-shady cyoa! } 
	0 lt .character@ .bodytype! ;

}

map{ regiondef{

trade-camp-reset

: bldg tanchor!
	"tradergym" $picklocid addloc 
		prefab{
		GREEN "SWOLE MOUNTAIN " .. RED .. BLINKY .. "THE GYM " .. RAINBOW .. "U GET " .. FLASHY .. "SWOLE" .. sign-text!
		0 0 0 sign-bg!
		0 1 0 sign-border!
		1 1 1 sign-fg!
		1 sign-glow!
		0 3 rnd 15 4 shop }
	
;
	
0 value gbx
0 value gby
0 value gbx2
0 value gby2

' plotpave >defer ft

: pt
	xyp.xy ft // Plot the current floor by default

	xyp.i char < = if xyp.xy to gby to gbx then;
	xyp.i char > = if gbx 1- gby xyp.xy swap 1+ swap gravellot then;
	xyp.i char ( = if xyp.xy to gby2 to gbx2 then;
	xyp.i char ) = if gbx2 1- gby2 xyp.xy swap 1+ swap gravellot then;
		
	xyp.i char P = if ' plotpave to ft xyp.xy ft then;
	
	xyp.i char x = if ' plotdirt to ft then;
	xyp.i char G = if ' plotgrass to ft xyp.xy ft then;
	xyp.i char $ = if xyp.xy grassedge then;
	xyp.i char { = if dirtstart then;
	xyp.i char } = if dirtend then;

	xyp.i char t = if pictable2 lt-here 8 rdrift then;		
	xyp.i char w = if pine lt-here drift then;
	xyp.i char V = if tradercarhere then;
	xyp.i char f = if campfirehere then;
		
	xyp.i char W = if trader-weapon-buyer then;
	xyp.i char T = if traderhere then;
	xyp.i char Z = if tnomey-spawn then;
	
	xyp.i char @ = if xyp.xy bldg then;
;

"
P........................
(........................
................Z..W.....
.........................
.........................
...................f.....
.........................
@.......................
........................)
.........................
.........................
.........................
.........................
.........................
.........................
........................."
constant maplayout

: plotmap
	0 -1 maplayout xyplot: pt
;

: site-setup
	1 no_time!
	19 24 rnd o'clock

	' plotdirt to ft

	30 %chance if 0 0.2 frnd weather! -1 2 frnd wind_force! else -1 1 frnd wind_force! then

	plotmap
	mission{ no-edge-spawns }

	// Put char and chars in middle of map
	25 %mv-up
	45 %chars-up
	
	map{ street-junk }
;

region: specialcamp-3
	w: maplayout layoutw
	h: maplayout layouth

	trade-mode

	post-script: site-setup

} }
